---
- name: Set nginx owner
  ansible.builtin.set_fact:
    nginx_owner: nginx
  when: ansible_facts["os_family"] == "RedHat"

- name: Set nginx owner
  ansible.builtin.set_fact:
    nginx_owner: root
  when: ansible_facts["os_family"] == "Debian"

- name: Template nginx-conf
  become: true
  ansible.builtin.template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_owner }}"
    mode: "u=rw,g=rw,o=r"
  notify: reload nginx
  when: ansible_facts["os_family"] == "RedHat"

- name: Template http header conf
  become: true
  ansible.builtin.template:
    src: "header.conf.j2"
    dest: "/etc/nginx/conf.d/header.conf"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_owner }}"
    mode: "u=rw,g=rw,o=r"
  notify: reload nginx
  when: ansible_facts["os_family"] == "RedHat"

- name: sites-enabled exist
  become: true
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled
    state: directory
    recurse: true
    mode: "u=rwx,g=rwx,o=rx"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_owner }}"
  when: ansible_facts["os_family"] == "RedHat"

- name: include http nginx-sites
  ansible.builtin.include_tasks: nginx-sites.yml
  loop: "{{ nginx_ws.sites | dict2items }}"
  loop_control:
    loop_var: site
